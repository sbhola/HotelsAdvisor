@using Microsoft.Owin.Security

<h4>Use another service to log in.</h4>
<hr />
@{
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    if (loginProviders.Count() == 0)
    {
        <div>
            <p>There are no external authentication services configured. See <a href="http://go.microsoft.com/fwlink/?LinkId=313242">this article</a>
            for details on setting up this ASP.NET application to support logging in via external services.</p>
        </div>
    }
    else
    {
        string action = Model.Action;
        string returnUrl = Model.ReturnUrl;
        using (Html.BeginForm(action, "Account", new { ReturnUrl = returnUrl }))
        {
            @Html.AntiForgeryToken()
            <div id="socialLoginList">

                <p>
               
                  
                @foreach (AuthenticationDescription p in loginProviders)
                {
                    if(p.AuthenticationType=="Facebook")      
                    {             
                            <button type="submit" class="btn"  style="width:21%;height:17%;border:hidden;border-color:#FAFAFA;box-shadow:none" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account"><img  style="font-stretch:expanded" src="http://www.rainyfrog.com/wp-content/uploads/2014/04/Facebook-Icon-1021x1024.png"/></button>
                    }
                    if(p.AuthenticationType=="Google")
                    {
                        <button type="submit" class="btn"   style="width:21%;height:17%;border:hidden;border-color:#FAFAFA;box-shadow:none" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account"><img  style="font-stretch:expanded" src="http://www.iconarchive.com/download/i60363/graphics-vibe/classic-3d-social/google.ico"/></button>
                    }
                 }
                </p>

            </div>
         }
    }
}
